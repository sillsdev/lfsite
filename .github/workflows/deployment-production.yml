# delete the old prod job when done, might need to change this name if we paramterize the workflow
name: Deploy to production

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
on:
  push:
    tags:
      # TODO: temp for development, remove when ready to deploy to production, should be triggering off of 'v*'.
      - 'billy*'

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      IMAGE: ${{ steps.image.outputs.NAMESPACE }}:${{ steps.image.outputs.TAG }}

    steps:
      -
        uses: actions/checkout@v2
      -
        name: Establish image name
        id: image
        run: |
          echo ::set-output name=NAMESPACE::sillsdev/web-languageforge
          echo ::set-output name=TAG::$(echo ${{ github.ref }} | sed 's/refs\/tags\///')
      -
        name: Build app
        # TODO: rather than duplicating this on each step, move it into the job
        working-directory: ./docker/
        run: docker-compose build --build-arg ENVIRONMENT=production --build-arg BUILD_VERSION=${{ steps.image.outputs.TAG }} app
      -
        run: |
          docker --version
          docker-compose --version
      -
        working-directory: ./docker/
        run:  docker-compose run --rm app cat /var/www/html/build-version.txt /var/www/html/version.php
      # -
      #   name: Check unit tests
      #   working-directory: ./docker/
      #   run: make unit-tests
      # -
      #   name: Check e2e tests
      #   working-directory: ./docker/
      #   run: make e2e-tests
      # -
      #   name: Log in to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      # -
      #   name: Tag images
      #   run: docker tag lf-app ${{ steps.image.outputs.NAMESPACE }}:${{ steps.image.outputs.TAG }}
      # -
      #   name: Publish image
      #   run: docker push ${{ steps.image.outputs.NAMESPACE }}:${{ steps.image.outputs.TAG }}

  # deploy:
  #   runs-on: [self-hosted, languageforge]

  #   needs: build

  #   steps:
  #     -
  #       uses: sillsdev/common-github-actions/install-kubectl@v1
  #     -
  #       # TODO: this needs to be changed to LTOPS_K8S_PRODUCTION_CONTEXT (and possibly parameterized so there's only one deploy workflow...)
  #       run: kubectl --context ${{ secrets.LTOPS_K8S_STAGING_CONTEXT }} set image deployment/app app=${{ needs.build.outputs.IMAGE }}
