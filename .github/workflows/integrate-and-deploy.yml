name: Integrate changes and deploy

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
on:
  workflow_call:
    # https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#onworkflow_callinputs
    inputs:
      image-tag:
        type: string
        required: true
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_callsecrets
    secrets:
      kube-context:
        required: true
      image-repo-username:
        required: true
      image-repo-password:
        required: true

jobs:
  integrate:
    runs-on: ubuntu-latest

    env:
      # https://docs.docker.com/develop/develop-images/build_enhancements/
      DOCKER_BUILDKIT: 1

    defaults:
      run:
        working-directory: docker

    steps:
      -
        uses: actions/checkout@v2
      -
        run: |
          docker --version
          docker-compose --version
      -
        name: Establish image name
        id: image
        run: |
          echo ::set-output name=NAMESPACE::sillsdev/web-languageforge
          echo ::set-output name=TAG::${{ inputs.image-tag }}
      -
        uses: actions/setup-node@v2
        with:
          node-version: '16.14.0'
          cache: 'npm'
      -
        run: npm ci
      -
        name: Build app
        run: docker-compose build --build-arg ENVIRONMENT=production --build-arg BUILD_VERSION=${{ steps.image.outputs.TAG }} app
      -
        run:  docker-compose run --rm app cat /var/www/html/build-version.txt /var/www/html/version.php
      -
        name: Unit Tests
        run: make unit-tests-ci
      -
        name: Playwright E2E Tests
        run: |
          docker-compose -f docker/docker-compose.yml up -d app-for-playwright
          npx playwright install
          npx playwright test
      -
        name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.image-repo-username }}
          password: ${{ secrets.image-repo-password }}
      -
        name: Tag image
        run: docker tag lf-app ${{ steps.image.outputs.NAMESPACE }}:${{ steps.image.outputs.TAG }}
      -
        name: Publish image
        run: docker push ${{ steps.image.outputs.NAMESPACE }}:${{ steps.image.outputs.TAG }}

    outputs:
      IMAGE: ${{ steps.image.outputs.NAMESPACE }}:${{ steps.image.outputs.TAG }}

  deploy:
    runs-on: [self-hosted, languageforge]

    needs: integrate

    steps:
      -
        uses: sillsdev/common-github-actions/install-kubectl@v1
      -
        run: kubectl --context ${{ secrets.kube-context }} set image deployment/app app=${{ needs.integrate.outputs.IMAGE }}
