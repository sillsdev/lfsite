name: Integrate changes and deploy

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
on:
  workflow_call:
    # https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#onworkflow_callinputs
    inputs:
      image-tag:
        type: string
        required: true
      kube-context:
        type: string
        required: true

jobs:
  integrate:
    runs-on: ubuntu-latest

    env:
      # https://docs.docker.com/develop/develop-images/build_enhancements/
      DOCKER_BUILDKIT: 1

    defaults:
      run:
        working-directory: docker

    steps:
      -
        uses: actions/checkout@v2
      -
        run: |
          docker --version
          docker-compose --version
      -
        name: Establish image name
        id: image
        run: |
          echo ::set-output name=NAMESPACE::sillsdev/web-languageforge
          echo ::set-output name=TAG::${{ inputs.image-tag }}
      -
        name: Build app
        run: docker-compose build --build-arg ENVIRONMENT=production --build-arg BUILD_VERSION=${{ steps.image.outputs.TAG }} app
      -
        run:  docker-compose run --rm app cat /var/www/html/build-version.txt /var/www/html/version.php
      -
        name: Check unit tests
        run: make unit-tests-ci
      -
        name: Check e2e tests
        run: make e2e-tests-ci
      -
        name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      -
        name: Tag image
        run: docker tag lf-app ${{ steps.image.outputs.NAMESPACE }}:${{ steps.image.outputs.TAG }}
      -
        name: Publish image
        run: docker push ${{ steps.image.outputs.NAMESPACE }}:${{ steps.image.outputs.TAG }}
      # -
      #   name: TODO: Tag "latest" conditionally
      #   run: docker tag lf-app ${{ steps.image.outputs.NAMESPACE }}:billyTestlatest
      # -
      #   # TODO: change final tag to just "latest"
      #   name: Publish image
      #   run: |
      #     docker push ${{ steps.image.outputs.NAMESPACE }}:${{ steps.image.outputs.TAG }}
      #     docker push ${{ steps.image.outputs.NAMESPACE }}:billyTestlatest

    outputs:
      IMAGE: ${{ steps.image.outputs.NAMESPACE }}:${{ steps.image.outputs.TAG }}

  deploy:
    runs-on: [self-hosted, languageforge]

    needs: integrate

    steps:
      -
        run:  echo ${{ inputs.kube-context }} and ${{ needs.integrate.outputs.IMAGE }}
      # -
      #   uses: sillsdev/common-github-actions/install-kubectl@v1
      # -
      #   # TODO: this needs to be changed to LTOPS_K8S_PRODUCTION_CONTEXT (and possibly parameterized so there's only one deploy workflow...)
      #   run: kubectl --context ${{ secrets.LTOPS_K8S_STAGING_CONTEXT }} set image deployment/app app=${{ needs.integrate.outputs.IMAGE }}
