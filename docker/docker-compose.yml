# https://docs.docker.com/compose/compose-file
version: '3.5'
services:
  ui-builder:
    build:
      context: ..
      dockerfile: docker/ui-builder/Dockerfile
    image: lf-ui-builder
    container_name: lf-ui-builder
    volumes:
      # share dist folder between ui and api containers
      - lf-ui-dist:/data/src/dist

      # for developer convenience volume map
      - ../webpack.config.js:/data/webpack.config.js
      - ../webpack-dev.config.js:/data/webpack-dev.config.js
      - ../webpack-prd.config.js:/data/webpack-prd.config.js
      - ../package.json:/data/package.json
      - ../package-lock.json:/data/package-lock.json

      # needed this volume mapping so changes to typescript would be reflected in running app, actually rebundled and outpt to dist which is then shared to the app container.
      - ../src/angular-app:/data/src/angular-app

  app:
    build:
      context: ..
      dockerfile: docker/app/Dockerfile
      args:
        - ENVIRONMENT=development
    image: lf-app
    container_name: lf-app
    depends_on:
      - db
      - mail
      - ld-api
    environment:
      - WAIT_HOSTS=db:27017, mail:25
      - XDEBUG_MODE=develop,debug
      - LDAPI_BASE_URL=http://ld-api:3000/api/v2/
      - ENVIRONMENT=development
      - WEBSITE=localhost
      # - WEBSITE=qa.languageforge.org
      - DATABASE=scriptureforge
      - MONGODB_CONN=mongodb://db:27017
      - MAIL_HOST=mail
      - GOOGLE_CLIENT_ID=bogus-development-token
      - GOOGLE_CLIENT_SECRET=bogus-development-token
      - FACEBOOK_CLIENT_ID=bogus-development-token
      - FACEBOOK_CLIENT_SECRET=bogus-development-token
      - REMEMBER_ME_SECRET=bogus-development-key
      - LANGUAGE_DEPOT_API_TOKEN=bogus-development-token
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      # holds things like audio files or pictures attached to words within a project
      - lf-project-assets:/var/www/src/assets

      # holds mercurial repos to avoid full clones/downloads on s/r projects
      - lfmerge-sendreceive-data:/var/lib/languageforge/lexicon/sendreceive

      # share dist folder between ui and api containers
      - lf-ui-dist:/var/www/html/dist

      # for developer convenience
      - ../src/index.php:/var/www/src/index.php
      - ../src/config.php:/var/www/src/config.php
      - ../src/Api:/var/www/src/Api
      - ../src/Site:/var/www/src/Site

      # needed this volume mapping so changes to partials would be reflected in running app.
      - ../src/angular-app:/var/www/src/angular-app

  ssl:
    image: caddy
    container_name: lf-ssl
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    volumes:
      - lf-caddy-data:/data
      - lf-caddy-config:/config
    # https://caddyserver.com/docs/command-line
    command: caddy reverse-proxy --from localhost --to app
    restart: unless-stopped

  mail:
    image: juanluisbaptiste/postfix:1.0.0
    container_name: lf-mail
    environment:
      - SMTP_SERVER=nobody.localhost
      - SMTP_USERNAME=username
      - SMTP_PASSWORD=password
      - SERVER_HOSTNAME=nobody.localhost
    command: sh -c "postconf -e 'default_transport = retry:no outbound email allowed' && /run.sh"

  db:
    image: mongo:4.0
    container_name: lf-db
    ports:
      # exposed this to host for admin tools
      - 27017:27017
    volumes:
      - ./db/init.js:/docker-entrypoint-initdb.d/init.js
      - lf-mongo-data:/data/db
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=scriptureforge

  selenium:
    image: selenium/standalone-chrome-debug:3.141.59-20210713
    volumes:
      - /dev/shm:/dev/shm
    ports:
      - "5900:5900"

  ld-db:
    image: mysql:5.7
    container_name: ld-db
    # To access the MySQL database via localhost:3306 on your dev machine (e.g., in VS Code), uncomment the "ports" config below
    # Note that if you're running MySQL on your dev machine already, change the first number to something else, like 3307 and access localhost:3307
    # ports:
    #   - 3306:3306
    environment:
      - MYSQL_HOST=ld-db
      - MYSQL_DATABASE=testldapi
      - MYSQL_DATABASE_PRIVATE=testldapipvt
      - MYSQL_USER=redmine
      - MYSQL_PASSWORD=not-a-secret
      - MYSQL_ROOT_PASSWORD=also-not-a-secret
    volumes:
      - ./test-ld/schemas-and-data.sql:/docker-entrypoint-initdb.d/schemas-and-data.sql

  ld-api:
    image: sillsdev/web-languagedepot-api
    container_name: ld-api
    depends_on:
      - ld-db
    environment:
      - PORT=3000
      - MYSQL_HOST=ld-db
      - MYSQL_DATABASE=testldapi
      - MYSQL_DATABASE_PRIVATE=testldapipvt
      - MYSQL_USER=redmine
      - MYSQL_PASSWORD=not-a-secret
      - MYSQL_ROOT_PASSWORD=also-not-a-secret

  test-e2e:
    build:
      context: ..
      dockerfile: docker/test-e2e/Dockerfile
      args:
        - ENVIRONMENT=development
    image: test-e2e
    container_name: test-e2e
    depends_on:
      - db
      - app-for-e2e
      - mail
      - selenium
    environment:
      - WAIT_HOSTS=db:27017, mail:25, selenium:4444, app-for-e2e:80
      - ENVIRONMENT=development
      - LANGUAGE_DEPOT_API_TOKEN=bogus-development-token
    command: sh -c "/wait && /run.sh"
    volumes:
      # for developer convenience
      - ../src:/data/src
      - ../typings:/data/typings
      - ../webpack.config.js:/data/webpack.config.js
      - ../webpack-dev.config.js:/data/webpack-dev.config.js
      - ../webpack-prd.config.js:/data/webpack-prd.config.js
      - ../package.json:/data/package.json
      - ../package-lock.json:/data/package-lock.json
# uncomment on dev machine for convenience but don't commit - it messes up the e2e test run by
# clobbering the JS files produced by tsc in the built image.
#      - ../test:/data/test

  app-for-e2e:
    build:
      context: ..
      dockerfile: docker/app-for-e2e/Dockerfile
    image: app-for-e2e
    container_name: app-for-e2e
    depends_on:
      - db
      - mail
    environment:
      - WAIT_HOSTS=db:27017, mail:25
      - LDAPI_BASE_URL=http://ld-api:3000/api/v2/
      - ENVIRONMENT=development
      - WEBSITE=localhost
      - DATABASE=scriptureforge_test
      - MONGODB_CONN=mongodb://db:27017
      - MAIL_HOST=mail
      - REMEMBER_ME_SECRET=bogus-development-key
      - LANGUAGE_DEPOT_API_TOKEN=bogus-development-token
    command: sh -c "/wait && /run.sh"

  test-php:
    build:
      context: ..
      dockerfile: docker/test-php/Dockerfile
    image: test-php
    container_name: test-php
    depends_on:
      - db
      - mail
    environment:
      - WAIT_HOSTS=db:27017, mail:25
      - ENVIRONMENT=development
      - DATABASE=scriptureforge_test
      - MONGODB_CONN=mongodb://db:27017
      - MAIL_HOST=mail
      - LANGUAGE_DEPOT_API_TOKEN=bogus-development-token
      # Note: Uncomment to enable XDebug in Unit Tests.  The default mode is "off".
      # These lines are commented out as this XDebug setup causes CI failures.
      # XDebug is intended for local development only.  Uncomment the following 3 lines:
      # - XDEBUG_MODE=develop,debug
    # extra_hosts:
      # - "host.docker.internal:host-gateway"
    command: sh -c "/wait && /run.sh"
    volumes:
      # for developer convenience
      - ../test:/var/www/test
      - ../src/Api:/var/www/src/Api
      - ../src/Site:/var/www/src/Site

volumes:
  lf-caddy-config:
  lf-caddy-data:
  lf-mongo-data:
  lf-project-assets:
  lfmerge-sendreceive-data:
  lf-ui-dist:
